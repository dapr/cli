apiVersion: dapr.io/v1alpha1
kind: Configuration
metadata:
  name: appconfig
spec:
  tracing:
    samplingRate: "1"
    zipkin:
      endpointAddress: "http://zipkin.default.svc.cluster.local:9411/api/v2/spans"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: subtractapp
  labels:
    app: subtract
spec:
  replicas: 1
  selector:
    matchLabels:
      app: subtract
  template:
    metadata:
      labels:
        app: subtract
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "subtractapp"
        dapr.io/app-port: "80"
        dapr.io/config: "appconfig"
    spec:
      containers:
      - name: subtract
        image: dapriosamples/distributed-calculator-csharp:latest
        ports:
        - containerPort: 80
        imagePullPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: addapp
  labels:
    app: add
spec:
  replicas: 1
  selector:
    matchLabels:
      app: add
  template:
    metadata:
      labels:
        app: add
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "addapp"
        dapr.io/app-port: "6000"
        dapr.io/config: "appconfig"
    spec:
      containers:
      - name: add
        image: dapriosamples/distributed-calculator-go:latest
        ports:
        - containerPort: 6000
        imagePullPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: divideapp
  labels:
    app: divide
spec:
  replicas: 1
  selector:
    matchLabels:
      app: divide
  template:
    metadata:
      labels:
        app: divide
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "divideapp"
        dapr.io/app-port: "4000"
        dapr.io/config: "appconfig"
    spec:
      containers:
      - name: divide
        image: dapriosamples/distributed-calculator-node:latest
        ports:
        - containerPort: 4000
        imagePullPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: multiplyapp
  labels:
    app: multiply
spec:
  replicas: 1
  selector:
    matchLabels:
      app: multiply
  template:
    metadata:
      labels:
        app: multiply
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "multiplyapp"
        dapr.io/app-port: "5000"
        dapr.io/config: "appconfig"
    spec:
      containers:
      - name: multiply
        image: dapriosamples/distributed-calculator-python:latest
        ports:
        - containerPort: 5000
        imagePullPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: calculator-front-end
  labels:
    app: calculator-front-end
spec:
  selector:
    app: calculator-front-end
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calculator-front-end
  labels:
    app: calculator-front-end
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calculator-front-end
  template:
    metadata:
      labels:
        app: calculator-front-end
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "calculator-front-end"
        dapr.io/app-port: "8080"
        dapr.io/config: "appconfig"
    spec:
      containers:
      - name: calculator-front-end
        image: dapriosamples/distributed-calculator-react-calculator:latest
        ports:
        - containerPort: 8080
        imagePullPolicy: Always
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: statestore
spec:
  type: state.redis
  version: v1
  metadata:
  # These settings will work out of the box if you use `helm install
  # bitnami/redis`.  If you have your own setup, replace
  # `redis-master:6379` with your own Redis master address, and the
  # Redis password with your own Secret's name. For more information,
  # see https://docs.dapr.io/operations/components/component-secrets .
  - name: redisHost
    value: redis-master:6379
  - name: redisPassword
    secretKeyRef:
      name: redis
      key: redis-password
auth:
  secretStore: kubernetes