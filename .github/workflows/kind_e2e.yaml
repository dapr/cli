# ------------------------------------------------------------
# Copyright 2021 The Dapr Authors
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------

name: E2E - KinD

on:
  push:
    branches:
      - master
      - release-*
  schedule:
    - cron: '0 */3 * * *'
  pull_request:
    branches:
      - master
      - 'release-*'

defaults:
  run:
    shell: bash
    working-directory: ./src/github.com/dapr/cli

jobs:
  # This workflow runs our e2e tests in a local KinD cluster. Since it
  # does not required a paid cluster and special credentials, it does
  # not require /ok-to-test. That allows contributors to run E2E tests
  # in their Draft PRs without explicit approval from Dapr
  # maintainers.
  #
  # One other benefit of a fully-localized workflow is that tests are
  # running on a fresh cluster everytime, thus being decoupled from
  # shared resource issues.
  #
  kubernetes-e2e:
    name: E2E tests for K8s (KinD)
    runs-on: ubuntu-latest
    env:
      GOVER: 1.17
      DAPR_RUNTIME_VERSION: 1.7.0
      DAPR_DASHBOARD_VERSION: 0.10.0
      DAPR_TGZ: dapr-1.7.0.tgz
    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix:
        k8s-version:
        - v1.20.15
        - v1.21.10
        - v1.22.7
        - v1.23.4
        mode:
        - ha
        - non-ha
        # Map between K8s and KinD versions.
        # This is attempting to make it a bit clearer what's being tested.
        # See: https://github.com/kubernetes-sigs/kind/releases/tag/v0.12.0
        include:
        - k8s-version: v1.20.15
          kind-version: v0.12.0
          kind-image-sha: sha256:393bb9096c6c4d723bb17bceb0896407d7db581532d11ea2839c80b28e5d8deb
        - k8s-version: v1.21.10
          kind-version: v0.12.0
          kind-image-sha: sha256:84709f09756ba4f863769bdcabe5edafc2ada72d3c8c44d6515fc581b66b029c
        - k8s-version: v1.22.7
          kind-version: v0.12.0
          kind-image-sha: sha256:1dfd72d193bf7da64765fd2f2898f78663b9ba366c2aa74be1fd7498a1873166
        - k8s-version: v1.23.4
          kind-version: v0.12.0
          kind-image-sha: sha256:0e34f0d0fd448aa2f2819cfd74e99fe5793a6e4938b328f657c8e3f81ee0dfb9
        exclude:
        - k8s-version: v1.20.15
          mode: non-ha
        - k8s-version: v1.21.10
          mode: non-ha
        - k8s-version: v1.22.7
          mode: non-ha  
    steps:
    - name: Set up Go ${{ env.GOVER }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOVER }}
    - name: Check out code onto GOPATH
      uses: actions/checkout@v2
      with:
        path: ./src/github.com/dapr/cli

    - name: Configure KinD
      # Generate a KinD configuration file that uses:
      # (a) a couple of worker nodes: this is needed to run both
      #     ZooKeeper + Kakfa, and
      # (b) a local registry: Due to `kind load` performance
      #     https://github.com/kubernetes-sigs/kind/issues/1165, using
      #     a local repository speeds up the image pushes into KinD
      #     significantly.
      working-directory: ./
      run: |
        cat > kind.yaml <<EOF
        apiVersion: kind.x-k8s.io/v1alpha4
        kind: Cluster
        nodes:
        - role: control-plane
          image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
        - role: worker
          image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
        - role: worker
          image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
        - role: worker
          image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
        EOF
        # Log the generated kind.yaml for easy reference.
        cat kind.yaml
    - name: Create KinD Cluster
      uses: helm/kind-action@v1.0.0
      with:
        config: kind.yaml
        cluster_name: kind
        version: ${{ matrix.kind-version }}

    - name: Get KinD info
      run: |
        kubectl cluster-info --context kind-kind
        NODE_IP=$(kubectl get nodes \
                  -lkubernetes.io/hostname!=kind-control-plane \
                  -ojsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
        echo "MINIKUBE_NODE_IP=$NODE_IP" >> $GITHUB_ENV
    - name: Free up some diskspace
      run: |
        docker image prune -a -f
    - name: Determine latest Dapr Runtime version including Pre-releases
      if: github.base_ref == 'master'
      run: |
        helm repo add dapr https://dapr.github.io/helm-charts/ && helm repo update && export RUNTIME_VERSION=$(helm search repo dapr/dapr --devel --versions | awk '/dapr\/dapr/ {print $3; exit}' )
        echo "DAPR_RUNTIME_VERSION=$RUNTIME_VERSION" >> $GITHUB_ENV
        echo "Found $RUNTIME_VERSION"
      shell: bash
    - name: Determine latest Dapr Dashboard version including Pre-releases
      if: github.base_ref == 'master'
      run: |
        curl -L -o dapr.tgz https://github.com/dapr/helm-charts/raw/master/$DAPR_TGZ && tar -xzf dapr.tgz && export DASHBOARD_VERSION=$(cat ./dapr/charts/dapr_dashboard/Chart.yaml | grep version | awk '{ print $2; exit }') && rm -rf dapr
        echo "DAPR_DASHBOARD_VERSION=$DASHBOARD_VERSION" >> $GITHUB_ENV
        echo "Found $DASHBOARD_VERSION"
      shell: bash
    - name: Run tests
      run: |
        export TEST_OUTPUT_FILE=$GITHUB_WORKSPACE/test-e2e-kind.json
        echo "TEST_OUTPUT_FILE=$TEST_OUTPUT_FILE" >> $GITHUB_ENV
        export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
        make e2e-build-run-k8s
      shell: bash
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.k8s-version }}_${{ matrix.mode }}_e2e_k8s.json
        path: ${{ env.TEST_OUTPUT_FILE }}
